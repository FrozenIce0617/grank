@mixin media($breakpoint, $type: 'min-width') {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (#{$type}: #{map-get($breakpoints, $breakpoint)}) {
            @content;
        }
    } @else {
        @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '
            + 'Please make sure it is defined in `$breakpoints` map.';
    }
}

@mixin border-radius($radius) {
    border-radius: $radius;
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
}

@mixin border-radius-important($radius) {
    border-radius: $radius !important;
    -webkit-border-radius: $radius !important;
    -moz-border-radius: $radius !important;
}

@mixin border-radii($topleft: '0px', $topright: '0px', $bottomright: '0px', $bottomleft: '0px') {
    border-top-left-radius: $topleft;
    border-top-right-radius: $topright;
    border-bottom-right-radius: $bottomright;
    border-bottom-left-radius: $bottomleft;
    -webkit-border-top-left-radius: $topleft;
    -webkit-border-top-right-radius: $topright;
    -webkit-border-bottom-right-radius: $bottomright;
    -webkit-border-bottom-left-radius: $bottomleft;
    -moz-border-radius-topleft: $topleft;
    -moz-border-radius-topright: $topright;
    -moz-border-radius-bottomright: $bottomright;
    -moz-border-radius-bottomleft: $bottomleft;
}

@mixin box-shadow($top, $left, $blur, $spread, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow: inset $top $left $blur $spread $color;
        -moz-box-shadow: inset $top $left $blur $spread $color;
        box-shadow: inset $top $left $blur $spread $color;
    } @else {
        -webkit-box-shadow: $top $left $blur $spread $color;
        -moz-box-shadow: $top $left $blur $spread $color;
        box-shadow: $top $left $blur $spread $color;
    }
}

@mixin remove-box-shadow {
    -webkit-box-shadow: none;
    -moz-box-shadow: none;
    box-shadow: none;
}

@mixin box-shadows($string) {
    -webkit-box-shadow: $string;
    -moz-box-shadow: $string;
    box-shadow: $string;
}

@mixin placeholder {
    &.placeholder {
        @content;
    }
    &:-moz-placeholder {
        @content;
    }
    &::-moz-placeholder {
        @content;
    }
    &:-ms-input-placeholder {
        @content;
    }
    &::-webkit-input-placeholder {
        @content;
    }
}

@mixin transition($transition...) {
    -moz-transition: $transition;
    -ms-transition: $transition;
    -o-transition: $transition;
    -webkit-transition: $transition;
    transition: $transition;
}

@mixin disableTextSelect {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@mixin transform($transforms) {
    -webkit-transform: $transforms;
    -moz-transform: $transforms;
    -ms-transform: $transforms;
    transform: $transforms;
}

@mixin blur($size) {
    -webkit-filter: blur($size);
    -moz-filter: blur($size);
    -ms-filter: blur($size);
    -o-filter: blur($size);
    filter: blur($size);
}

// Rotate
@mixin rotate($deg) {
    @include transform(rotate(#{$deg}deg));
}

// Scale
@mixin scale($scale) {
    @include transform(scale($scale));
}

// Translate
@mixin translate($x, $y) {
    @include transform(translate($x, $y));
}

// Skew
@mixin skew($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}

// Transform Origin
@mixin transform-origin($origin) {
    -webkit-transform-origin: $origin;
    -moz-transform-origin: $origin;
    -ms-transform-origin: $origin;
    transform-origin: $origin;
}

@mixin word-wrap($hyphens: none) {
    -ms-word-break: break-all;
    word-break: break-all;
    word-break: break-word;
    -webkit-hyphens: $hyphens;
    -moz-hyphens: $hyphens;
    white-space: pre-wrap;
    hyphens: $hyphens;
}

@mixin gradient($from, $to, $stop: 100%) {
    /* fallback/image non-cover color */
    background-color: $from;

    /* Firefox 3.6+ */
    background-image: -moz-linear-gradient(left, $from 0%, $to $stop);

    /* Safari 4+, Chrome 1+ */
    background-image: -webkit-gradient(
        linear,
        left top,
        right top,
        color-stop(0%, $from),
        color-stop($stop, $to)
    );

    /* Safari 5.1+, Chrome 10+ */
    background-image: -webkit-linear-gradient(left, $from 0%, $to $stop);

    /* Opera 11.10+ */
    background-image: -o-linear-gradient(left, $from 0%, $to $stop);

    /* IE10+ */
    background: -ms-linear-gradient(left, $from 0%, $to $stop);

    /* Standard */
    background: linear-gradient(to right, $from 0%, $to $stop);

    /* IE6-9 */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$from', endColorstr='$to',GradientType=1 );
}
